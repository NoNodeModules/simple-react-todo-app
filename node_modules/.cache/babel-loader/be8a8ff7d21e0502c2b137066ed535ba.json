{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/React/todo-app/src/TodoItem.js\";\nimport React, { Component } from 'react';\nimport './TodoItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false,\n      editedTask: this.props.todoContent\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.renderEditForm = this.renderEditForm.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleComplete = this.handleComplete.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n\n  handleEdit(event) {\n    event.preventDefault();\n    this.props.updateTodo(this.props.id, this.state.editedTask);\n    this.setState({\n      isEditing: false\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      editedTask: event.target.value\n    });\n  }\n\n  renderEditForm() {\n    this.setState({\n      isEditing: true\n    });\n  }\n\n  handleComplete() {\n    this.props.toggleComplete(this.props.id);\n  }\n\n  render() {\n    let renderMessage;\n\n    if (this.state.isEditing) {\n      renderMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Todo-edit\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleEdit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.editedTask,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    } else {\n      renderMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.handleComplete,\n          className: this.props.completed ? \"TodoItem TodoItem-completed\" : \"TodoItem\",\n          children: this.props.todoContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleRemove,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.renderEditForm,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this);\n    }\n\n    return renderMessage;\n  }\n\n}\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/React/todo-app/src/TodoItem.js"],"names":["React","Component","TodoItem","constructor","props","state","isEditing","editedTask","todoContent","handleRemove","bind","renderEditForm","handleEdit","handleChange","handleComplete","removeTodo","id","event","preventDefault","updateTodo","setState","target","value","toggleComplete","render","renderMessage","completed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './TodoItem.css'\n\nclass TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isEditing: false, editedTask: this.props.todoContent };\n        this.handleRemove = this.handleRemove.bind(this);\n        this.renderEditForm = this.renderEditForm.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleComplete = this.handleComplete.bind(this);\n    }\n\n    handleRemove() {\n        this.props.removeTodo(this.props.id);\n    }\n\n    handleEdit(event) {\n        event.preventDefault();\n        this.props.updateTodo(this.props.id, this.state.editedTask);\n        this.setState({ isEditing: false });\n    }\n\n    handleChange(event) {\n        this.setState({ editedTask: event.target.value });\n    }\n\n    renderEditForm() {\n        this.setState({ isEditing: true });\n    }\n\n    handleComplete() {\n        this.props.toggleComplete(this.props.id);\n    }\n\n    render() {\n        let renderMessage;\n        if (this.state.isEditing) {\n            renderMessage =\n                <div className=\"Todo-edit\">\n                    <form onSubmit={this.handleEdit}>\n                        <input type=\"text\" value={this.state.editedTask} onChange={this.handleChange} />\n                        <button>Save</button>\n                    </form>\n                </div>\n        } else {\n            renderMessage =\n                <div className=\"Todo\">\n                    <li onClick={this.handleComplete}\n                        className={this.props.completed ? \"TodoItem TodoItem-completed\" : \"TodoItem\"}>\n                        {this.props.todoContent}\n                    </li>\n                    <button onClick={this.handleRemove}>x</button>\n                    <button onClick={this.renderEditForm}>Edit</button>\n                </div >\n        }\n        return renderMessage;\n    }\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}