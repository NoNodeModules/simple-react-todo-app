{"ast":null,"code":"var _jsxFileName = \"/Users/meocuabinh/Documents/React/todo-app/src/TodoItem.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: false\n    };\n    this.handleRemove = this.handleRemove.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  handleRemove() {\n    this.props.removeTodo(this.props.id);\n  }\n\n  handleEdit() {\n    this.setState({\n      isEditing: true\n    });\n  }\n\n  render() {\n    let renderMessage;\n\n    if (this.state.isEditing) {\n      renderMessage = /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.props.todoContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    } else {\n      renderMessage = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: this.props.todoContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleRemove,\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }\n\n    return renderMessage;\n  }\n\n}\n\nexport default TodoItem;","map":{"version":3,"sources":["/Users/meocuabinh/Documents/React/todo-app/src/TodoItem.js"],"names":["React","Component","TodoItem","constructor","props","state","isEditing","handleRemove","bind","handleEdit","removeTodo","id","setState","render","renderMessage","todoContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,YAAY,GAAG;AACX,SAAKH,KAAL,CAAWM,UAAX,CAAsB,KAAKN,KAAL,CAAWO,EAAjC;AACH;;AAEDF,EAAAA,UAAU,GAAG;AACT,SAAKG,QAAL,CAAc;AAAEN,MAAAA,SAAS,EAAE;AAAb,KAAd;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAJ;;AACA,QAAI,KAAKT,KAAL,CAAWC,SAAf,EAA0B;AACtBQ,MAAAA,aAAa,gBACT;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWW;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAIH,KALD,MAKO;AACHD,MAAAA,aAAa,gBACT;AAAA,gCACI;AAAA,oBAAK,KAAKV,KAAL,CAAWW;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,KAAKR,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,KAAKE,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AACD,WAAOK,aAAP;AACH;;AAhC4B;;AAmCjC,eAAeZ,QAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { isEditing: false, };\n        this.handleRemove = this.handleRemove.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n    }\n\n    handleRemove() {\n        this.props.removeTodo(this.props.id);\n    }\n\n    handleEdit() {\n        this.setState({ isEditing: true });\n    }\n\n    render() {\n        let renderMessage;\n        if (this.state.isEditing) {\n            renderMessage =\n                <form>\n                    <input type=\"text\" value={this.props.todoContent} />\n                </form>\n        } else {\n            renderMessage =\n                <div>\n                    <li>{this.props.todoContent}</li>\n                    <button onClick={this.handleRemove}>x</button>\n                    <button onClick={this.handleEdit}>Edit</button>\n                </div>\n        }\n        return renderMessage;\n    }\n}\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}